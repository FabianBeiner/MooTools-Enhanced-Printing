var EnhancedPrinting = new Class({	Implements: Events,	initialize: function(content) {		this.content = $(content) || $(document.body);		this.base = URI.base;		this.host = this.base.get('host');		this.i = 0;		this.div = new Element('div', {			'id': 'print-extras'		}).inject(document.body);		this.setupHeadings();		this.ol = new Element('ol').inject(this.div);		this.handleLinks();		this.handleAbbr();	},	setupHeadings: function() {		new Element('h2', {			'html': document.title		}).inject(this.div);		new Element('h3', {			'html': '(' + this.base + ' zuletzt bearbeitet am ' + Date.parse(document.lastModified).format('%d.%m.%Y um %H:%M Uhr') + ')'		}).inject(this.div);	},	handleLinks: function() {		var links = this.content.getElements('a');		if (links.length) {			sorted = [];			links.each(function(el) {				if (el.href != el.get('html')) {					sorted.include(el.href);				}			});			links.each(function(el) {				if ((sorted.indexOf(el.href) != -1) && (el.href != el.get('html'))) {					new Element('span', {						'text': ' [' + (sorted.indexOf(el.href) + 1) + ']'					}).inject(el, 'after');				}			});			sorted.each(function(el) {				var li = new Element('li', {					'html': el + ((!el.contains(this.host)) ? ' &rarr;': '')				}).inject(this.ol);				var favicon = new URI('/favicon.ico', {					base: el				}).toString();				var img = new Element('img', {					'src': favicon,					'class': 'favicon'				}).inject(li, 'top');				img.addEvent('error', function() {					this.destroy();				});			}.bind(this));			this.i = this.i + sorted.length;		}	},	handleAbbr: function() {		var abbr = this.content.getElements('abbr');		if (abbr.length) {			sorted = [];			abbr.each(function(el) {				if (el.title != el.get('text')) {					sorted.include(el.title);				}			});			abbr.each(function(el) {				if ((sorted.indexOf(el.title) != -1) && (el.title != el.get('text'))) {					new Element('span', {						'text': ' [' + (sorted.indexOf(el.title) + this.i + 1) + ']'					}).inject(el, 'after');				}			}.bind(this));			sorted.each(function(el) {				new Element('li', {					'html': abbr[sorted.indexOf(el)].get('text') + ': ' + el				}).inject(this.ol);			}.bind(this));		}	}});